se_log_dist   <- summary_log_dist$coefficients["log(mean_dist)", "Std. Error"]
r2_log_dist   <- summary_log_dist$r.squared
# Format annotation label
label_log_dist <- sprintf("β = %.3f (SE = %.3f)\nR² = %.3f", coef_log_dist, se_log_dist, r2_log_dist)
# Plot
ggplot(v_0515 %>% filter(is.finite(abs_change_log), is.finite(mean_dist)),
aes(x = log(mean_dist), y = abs_change_log)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "blue", se = TRUE) +
annotate("text", x = Inf, y = Inf, label = label_log_dist, hjust = 1.1, vjust = 1.5, size = 5) +
labs(
title = "Relationship Between Log Distance to Road and abs_change_log",
x = "Log Mean Distance to Road (m)",
y = "Log Absolute Change"
) +
theme_bw()
#| echo: false
v_centroids <- st_centroid(v_0515)
ggplot() +
geom_sf(data = v_0515, aes(fill = elevation_slope_group), color = NA, alpha = 0.7) +
scale_fill_manual(
name   = "Elev-Slope Group",
values = c(
"High-High" = "#EF3B2C",   # both high → red
"High-Low"  = "#FDAE61",   # high elev only → orange
"Low-High"  = "#66C2A5",   # high slope only → green
"Low-Low"   = "#2171B5"    # both low → blue
)
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
geom_sf(data = v_centroids %>% filter(change_quantile %in% c("80–100%")),
color = "black", size = 0.3, alpha = 0.8) +
labs(title = "Elevation-Slope Group Map (2005)",
subtitle = "Cutoff set to median elevation (702.63m) and median slope (31 degree)
\nBlack Dots: villages at 80-100% population density change quantile") +
theme_bw() +
theme(legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black"))
#| echo: false
ggplot() +
geom_sf(data = v_0515, aes(fill = elevation_slope_group), color = NA, alpha = 0.7) +
scale_fill_manual(
name   = "Elev-Slope Group",
values = c(
"High-High" = "#EF3B2C",   # both high → red
"High-Low"  = "#FDAE61",   # high elev only → orange
"Low-High"  = "#66C2A5",   # high slope only → green
"Low-Low"   = "#2171B5"    # both low → blue
)
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
geom_sf(data = v_centroids %>% filter(change_quantile %in% c("60–80%")),
color = "black", size = 0.3, alpha = 0.8) +
labs(title = "Elevation-Slope Group Map (2005)",
subtitle = "Cutoff set to median elevation (702.63m) and median slope (31 degree)
\nBlack Dots: villages at 60-80% population density change quantile") +
theme_bw() +
theme(legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black"))
#| echo: false
ggplot() +
geom_sf(data = v_0515, aes(fill = elevation_slope_group), color = NA, alpha = 0.7) +
scale_fill_manual(
name   = "Elev-Slope Group",
values = c(
"High-High" = "#EF3B2C",   # both high → red
"High-Low"  = "#FDAE61",   # high elev only → orange
"Low-High"  = "#66C2A5",   # high slope only → green
"Low-Low"   = "#2171B5"    # both low → blue
)
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
geom_sf(data = v_centroids %>% filter(change_quantile %in% c("40–60%")),
color = "black", size = 0.3, alpha = 0.8) +
labs(title = "Elevation-Slope Group Map (2005)",
subtitle = "Cutoff set to median elevation (702.63m) and median slope (31 degree)
\nBlack Dots: villages at 40–60% population density change quantile") +
theme_bw() +
theme(legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black"))
#| echo: false
ggplot() +
geom_sf(data = v_0515, aes(fill = elevation_slope_group), color = NA, alpha = 0.7) +
scale_fill_manual(
name   = "Elev-Slope Group",
values = c(
"High-High" = "#EF3B2C",   # both high → red
"High-Low"  = "#FDAE61",   # high elev only → orange
"Low-High"  = "#66C2A5",   # high slope only → green
"Low-Low"   = "#2171B5"    # both low → blue
)
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
geom_sf(data = v_centroids %>% filter(change_quantile %in% c("20–40%")),
color = "black", size = 0.3, alpha = 0.8) +
labs(title = "Elevation-Slope Group Map (2005)",
subtitle = "Cutoff set to median elevation (702.63m) and median slope (31 degree)
\nBlack Dots: villages at 20–40% population density change quantile") +
theme_bw() +
theme(legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black"))
#| echo: false
ggplot() +
geom_sf(data = v_0515, aes(fill = elevation_slope_group), color = NA, alpha = 0.7) +
scale_fill_manual(
name   = "Elev-Slope Group",
values = c(
"High-High" = "#EF3B2C",   # both high → red
"High-Low"  = "#FDAE61",   # high elev only → orange
"Low-High"  = "#66C2A5",   # high slope only → green
"Low-Low"   = "#2171B5"    # both low → blue
)
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
geom_sf(data = v_centroids %>% filter(change_quantile %in% c("0–20%")),
color = "black", size = 0.3, alpha = 0.8) +
labs(title = "Elevation-Slope Group Map (2005)",
subtitle = "Cutoff set to median elevation (702.63m) and median slope (31 degree)
\nBlack Dots: villages at 0–20% population density change quantile") +
theme_bw() +
theme(legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black"))
#| echo: false
# Create summary table
table_density_change_elevslope <- v_0515 %>%
st_drop_geometry() %>%
count(elevation_slope_group, change_quantile) %>%
tidyr::pivot_wider(
names_from = change_quantile,
values_from = n,
values_fill = 0
)
table_density_change_elevslope %>%
kable(
format = "html",  # or "latex" if you're rendering PDF
caption = "Number of Villages by Elevation-Slope Group and Population Density Change Quantile",
align = "c"
)
#| echo: false
table_summary_density_elevslope <- v_0515 %>%
st_drop_geometry() %>%
group_by(change_quantile) %>%
summarize(
mean_val = mean(c_population_density),
median_val = median(c_population_density),
minimum = min(c_population_density),
maximum = max(c_population_density))
table_summary_density_elevslope %>%
kable(
format = "html",  # or "latex" if you're rendering PDF
caption = "Summary Statistics of Population Density Change by Quantile (Census)",
align = "c"
)
# Plot with shape distinction
ggplot() +
geom_sf(data = v_0515, aes(fill = elevation_slope_group), color = NA, alpha = 0.7) +
scale_fill_manual(
name   = "Elev-Slope Group",
values = c(
"High-High" = "#EF3B2C",
"High-Low"  = "#FDAE61",
"Low-High"  = "#66C2A5",
"Low-Low"   = "#2171B5"
)
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
# Centroids: distinguish by shape
geom_sf(data = v_centroids, aes(shape = c_density_binary), color = "black", size = 0.5, alpha = 0.8) +
scale_shape_manual(
name = "Change in Density (2005–2015)",
values = c("Increase" = 16, "Decrease" = 1)  # solid circle vs. hollow circle
) +
labs(
title = "Elevation-Slope Group Map (2005)",
subtitle = "Dot shape indicates whether village population density increased or decreased"
) +
theme_bw() +
theme(legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black"))
# Plot
ggplot() +
geom_sf(data = v_0515, aes(fill = elevation_slope_group), color = NA, alpha = 0.5) +
scale_fill_manual(
name   = "Elev-Slope Group",
values = c(
"High-High" = "#EF3B2C",
"High-Low"  = "#FDAE61",
"Low-High"  = "#66C2A5",
"Low-Low"   = "#2171B5"
)
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
# Centroids colored by density change
geom_sf(data = v_centroids, aes(color = c_density_binary), size = 0.4, alpha = 0.9) +
scale_color_manual(
name = "Change in Density (2005–2015)",
values = c("Increase" = "black", "Decrease" = "white")
) +
labs(
title = "Elevation-Slope Group Map (2005)",
subtitle = "Black and white dots represent villages with increase or decrease in population density"
) +
theme_bw() +
theme(
legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black")
)
#| echo: false
ggplot(v_0515) +
geom_sf(aes(fill = abs_change_quantile), color = NA) +
scale_fill_brewer(
palette = "Blues",
direction = 1,
name = "Absolute Change\nin Density",
na.value = "grey90"
) +
labs(
title = "Absolute Change in Population Density (2005–2015)",
x = "Longitude",
y = "Latitude",
caption = "Data Source: Laos Population and Housing Census 2005/2015"
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
theme_bw() +
theme(legend.justification = c(1, 1),
legend.background = element_rect(fill = "white", color = "black"))
#| include: false
user <- 2
working_dirs <- c(
"Your coauthor's path",
"D:/AppliedEconomics/Opium_Substitution/Empirical/build"
)
setwd(working_dirs[user])
# WorldPop time series (2005 boundary)
wp_2005 <- readRDS("temp/worldpop_village_2005.rds") %>%
select(VCODE, starts_with("pop_")) %>%
mutate(VCODE = if_else(nchar(VCODE) == 6, paste0("0", VCODE), as.character(VCODE)))
# Worldpop time series (2015 boundary)
wp_2015 <- readRDS("temp/worldpop_village_2015.rds") %>%
select(VCODE, starts_with("pop_")) %>%
mutate(VCODE = if_else(nchar(VCODE) == 6, paste0("0", VCODE), as.character(VCODE)))
# phc_05
phc_05 <- readRDS("temp/phc_2005.rds") %>%
mutate(area_km2 = as.numeric(st_area(geometry)) / 1e6) %>%
left_join(wp_2005, by = "VCODE") %>%
mutate(dens_2005 = pop_2005 / area_km2,
dens_2015 = pop_2015 / area_km2,
c_dens = dens_2015 - dens_2005)
# phc_15
phc_15 <- readRDS("temp/phc_2015.rds") %>%
mutate(area_km2 = as.numeric(st_area(geometry)) / 1e6) %>%
left_join(wp_2015, by = "VCODE") %>%
mutate(dens_2005 = pop_2005 / area_km2,
dens_2015 = pop_2015 / area_km2,
c_dens = dens_2015 - dens_2005)
# phc_0515
phc_0515 <- readRDS("temp/phc_20052015.rds") %>%
mutate(area_km2 = as.numeric(st_area(geometry)) / 1e6) %>%
left_join(wp_2015, by = "VCODE") %>%
mutate(dens_2005 = pop_2005 / area_km2,
dens_2015 = pop_2015 / area_km2,
c_dens = dens_2015 - dens_2005)
# Match List
final_match <- read_csv("temp/match_list.csv") %>%
filter(str_sub(vcode_2005, 1, 2) %in% c("02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "18"))
# Construct Merged Panel (2005/2015)
# 1. Merge 2005 data with match list
matched_05 <- final_match %>%
left_join(phc_05 %>%
st_drop_geometry() %>%
select(VCODE, population_2005 = population,
poverty_rate_2005 = poverty_rate,
area_km2_2005 = area_km2),
by = c("vcode_2005" = "VCODE"))
# 2. Merge 2015 data
matched_0515 <- matched_05 %>%
left_join(phc_15 %>%
st_drop_geometry() %>%
select(VCODE, population_2015 = population,
poverty_rate_2015 = poverty_rate,
area_km2_2015 = area_km2),
by = c("vcode_2015" = "VCODE"),
suffix = c("_2005", "_2015"))
# 3. Aggregate to 2015 villages
merged_panel <- matched_0515 %>%
group_by(vcode_2015) %>%
summarise(
population_2005 = sum(population_2005, na.rm = TRUE),
poverty_rate_2005 = {
x <- poverty_rate_2005
w <- population_2005
mask <- !is.na(x) & !is.na(w)
if (sum(mask) > 0) weighted.mean(x[mask], w[mask]) else NA_real_
},
area_km2_2005 = sum(area_km2_2005, na.rm = TRUE),
population_2015 = first(population_2015),
poverty_rate_2015 = first(poverty_rate_2015),
area_km2_2015 = first(area_km2_2015)
) %>%
mutate(
density_2005 = population_2005 / area_km2_2005,
density_2015 = population_2015 / area_km2_2015,
c_density = density_2015 - density_2005,
ld_density = log(density_2015) - log(density_2005),
c_poverty = poverty_rate_2015 - poverty_rate_2005
) %>%
ungroup()
matched_0515 <- merged_panel %>%
left_join(wp_2015, by = c("vcode_2015" = "VCODE")) %>%
mutate(c_population = population_2015 - population_2005,
c_pop = pop_2015 - pop_2005,
ld_population = log(population_2015) - log(population_2005),
ld_pop = log(pop_2015) - log(pop_2005),
dens_2005 = pop_2005 / area_km2_2005,
dens_2015 = pop_2015 / area_km2_2015,
c_dens = dens_2015 - dens_2005,
ld_dens = log(dens_2015) - log(dens_2005))
# Select elevation and slope from v_2015 and join to matched_0515
matched_0515 <- matched_0515 %>%
left_join(
v_2015 %>%
st_drop_geometry() %>%
select(VCODE, mean_elev, mean_slope),
by = c("vcode_2015" = "VCODE")
) %>%
mutate(
elevation = if_else(mean_elev > median(mean_elev, na.rm = TRUE), "High Elevation", "Low Elevation"),
slope     = if_else(mean_slope > median(mean_slope, na.rm = TRUE), "High Slope", "Low Slope"),
elevation_slope_group = case_when(
elevation == "High Elevation" & slope == "High Slope" ~ "High-High",
elevation == "High Elevation" & slope == "Low Slope"  ~ "High-Low",
elevation == "Low Elevation"  & slope == "High Slope" ~ "Low-High",
elevation == "Low Elevation"  & slope == "Low Slope"  ~ "Low-Low"
)
)
# Create ld_dens_quantile
matched_0515 <- matched_0515 %>%
mutate(ld_density_quantile = cut(
ld_density,
breaks = quantile(ld_density, probs = seq(0, 1, 0.2), na.rm = TRUE),
include.lowest = TRUE,
labels = c("0–20%", "20–40%", "40–60%", "60–80%", "80–100%")
)) %>%
mutate(ld_dens_quantile = cut(
ld_dens,
breaks = quantile(ld_dens, probs = seq(0, 1, 0.2), na.rm = TRUE),
include.lowest = TRUE,
labels = c("0–20%", "20–40%", "40–60%", "60–80%", "80–100%")
))
glimpse(matched_0515)
#| echo: false
# Join quantile info to centroids
v_centroids_2015 <- v_centroids %>%
left_join(
matched_0515 %>% select(vcode_2015, ld_dens_quantile, ld_density_quantile),
by = c("VCODE" = "vcode_2015")
)
# Add geometry from v_2015
matched_0515_sf <- matched_0515 %>%
left_join(
v_2015 %>% select(VCODE, geometry),
by = c("vcode_2015" = "VCODE")
) %>%
st_as_sf()  # Convert back to sf object
# Plot
ggplot() +
geom_sf(data = matched_0515_sf, aes(fill = elevation_slope_group), color = NA, alpha = 0.7) +
scale_fill_manual(
name = "Elev-Slope Group",
values = c("High-High" = "#EF3B2C",
"High-Low" = "#FDAE61",
"Low-High" = "#66C2A5",
"Low-Low" = "#2171B5")
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
geom_sf(
data = v_centroids_2015 %>% filter(ld_dens_quantile == "80–100%"),
color = "black", size = 0.4, alpha = 0.9
) +
labs(
title = "Villages with Top 20% Log Density Change (2005–2015)",
subtitle = "Black dots indicate villages in top 80–100% of log population density change (WorldPop)"
) +
theme_bw()
#| echo: false
# Plot
ggplot() +
geom_sf(data = matched_0515_sf, aes(fill = elevation_slope_group), color = NA, alpha = 0.7) +
scale_fill_manual(
name = "Elev-Slope Group",
values = c("High-High" = "#EF3B2C",
"High-Low" = "#FDAE61",
"Low-High" = "#66C2A5",
"Low-Low" = "#2171B5")
) +
geom_sf(data = masked_roads, color = "grey30", alpha = 0.7) +
geom_sf(
data = v_centroids_2015 %>% filter(ld_density_quantile == "80–100%"),
color = "black", size = 0.4, alpha = 0.9
) +
labs(
title = "Villages with Top 20% Log Density Change (2005–2015)",
subtitle = "Black dots indicate villages in top 80–100% of log population density change (PHC Matched)"
) +
theme_bw()
#| echo: false
table_ld_dens_elevslope <- matched_0515 %>%
st_drop_geometry() %>%
count(elevation_slope_group, ld_dens_quantile) %>%
tidyr::pivot_wider(
names_from = ld_dens_quantile,
values_from = n,
values_fill = 0
)
table_ld_dens_elevslope %>%
kable(
format = "html",  # or "latex" if you're rendering PDF
caption = "Number of Villages by Elevation-Slope Group and Population Density Change Quantile (log difference, WorldPop)",
align = "c"
)
#| echo: false
table_ld_density_elevslope <- matched_0515 %>%
st_drop_geometry() %>%
count(elevation_slope_group, ld_density_quantile) %>%
tidyr::pivot_wider(
names_from = ld_density_quantile,
values_from = n,
values_fill = 0
)
table_ld_density_elevslope %>%
kable(
format = "html",  # or "latex" if you're rendering PDF
caption = "Number of Villages by Elevation-Slope Group and Population Density Change Quantile (log difference, Matched PHC)",
align = "c"
)
glimpse(v_0515)
glimpse(v_2005)
# National level population distribution in low-low and high-high elevation-slope group
v_2005 %>%
group_by(elevation_slope_group) %>%
summarize(n_village = n(),
n_population = sum(population))
# National level population distribution in low-low and high-high elevation-slope group
v_2005 %>%
st_drop_geometry() %>%
group_by(elevation_slope_group) %>%
summarize(n_village = n(),
n_population = sum(population)) %>%
mutate(mean_population = n_population / n_village)
# National level population distribution in low-low and high-high elevation-slope group
v_2005 %>%
st_drop_geometry() %>%
group_by(elevation_slope_group) %>%
summarize(n_village = n(),
n_population = sum(population)) %>%
mutate(mean_population = n_population / n_village)
v_2015 %>%
st_drop_geometry() %>%
group_by(elevation_slope_group) %>%
summarize(n_village = n(),
n_population = sum(population)) %>%
mutate(mean_population = n_population / n_village)
glimpse(v_2015)
#| include: false
# Environment setup
user <- 2
working_dirs <- c(
"Your coauthor's path",
"D:/AppliedEconomics/Opium_Substitution/Empirical/build"
)
setwd(working_dirs[user])
# Load Library
library(tidyverse)
library(sf)
library(terra)
library(patchwork)
library(knitr)
# Read Data
phc_2005 <- readRDS("temp/phc_2005.rds")
phc_2015 <- readRDS("temp/phc_2015.rds")
phc_20052015 <- readRDS("temp/phc_20052015.rds")
risk_2005 <- readRDS("temp/risk_2005.rds") %>%
mutate(VCODE = if_else(nchar(VCODE) == 6, paste0("0", VCODE), as.character(VCODE)))
risk_2015 <- readRDS("temp/risk_2015.rds") %>%
mutate(VCODE = if_else(nchar(VCODE) == 6, paste0("0", VCODE), as.character(VCODE)))
masked_roads <- readRDS("temp/masked_roads.rds")
# Join data
v_2005 <- phc_2005 %>%
left_join(risk_2005, by = "VCODE")
v_2015 <- phc_2015 %>%
left_join(risk_2015, by = "VCODE") %>%
mutate(
low_elevation = factor(if_else(mean_elev <= median(mean_elev, na.rm = TRUE), 1, 0)),
low_slope = factor(if_else(mean_slope <= median(mean_slope, na.rm = TRUE), 1, 0))) %>%
mutate(
elevation_slope_group = factor(if_else(low_elevation == 0 & low_slope == 0, "High-High", if_else(low_elevation == 0 & low_slope == 1, "High-Low", if_else(low_elevation == 1 & low_slope == 0, "Low-High", "Low-Low"))))
)
v_0515 <- phc_20052015 %>%
left_join(risk_2015, by = "VCODE")
# National level population distribution in low-low and high-high elevation-slope group
v_2005 %>%
st_drop_geometry() %>%
group_by(elevation_slope_group) %>%
summarize(n_village = n(),
n_population = sum(population)) %>%
mutate(mean_population = n_population / n_village)
v_2005 %>%
st_drop_geometry() %>%
group_by(elevation_slope_group) %>%
summarize(n_village = n(),
n_population = sum(population)) %>%
mutate(mean_population = n_population / n_village)
